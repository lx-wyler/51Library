C51 COMPILER V9.00   I2C                                                                   07/27/2021 22:36:39 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN i2c.obj
COMPILER INVOKED BY: C:\RJ\Keil_v5\C51\BIN\C51.EXE i2c\i2c.c LARGE OMF2 BROWSE INCDIR(.\uart;.\epaper;.\led;.\other_head
                    -;.\keyboard;.\smg;.\OLED;.\mycommon;.\i2c;.\mpu6050;.\pac) DEBUG PRINT(.\i2c.lst) OBJECT(i2c.obj)

line level    source

   1          #include "i2c.h"
   2          #include <intrins.h>
   3          #include "PinDefine.h"
   4          #include "mycommon.h"
   5          
   6          
   7          
   8          #include "oled.h"
   9          #include <stdio.h>
  10          
  11          typedef unsigned char uchar;
  12          typedef unsigned short ushort;
  13          typedef unsigned int   uint;
  14          
  15          
  16          //**************************************
  17          //I2C起始信号
  18          //**************************************
  19          void i2c_start()
  20          {
  21   1          SDA = 1;                    //拉高数据线
  22   1          SCL = 1;                    //拉高时钟线
  23   1          Delay5us();                 //延时
  24   1          SDA = 0;                    //产生下降沿
  25   1          Delay5us();                 //延时
  26   1          SCL = 0;                    //拉低时钟线
  27   1      }
  28          
  29          //**************************************
  30          //I2C停止信号
  31          //**************************************
  32          void i2c_stop()
  33          {
  34   1          SDA = 0;                    //拉低数据线
  35   1          SCL = 1;                    //拉高时钟线
  36   1          Delay5us();                 //延时
  37   1          SDA = 1;                    //产生上升沿
  38   1          Delay5us();                 //延时
  39   1      }
  40          
  41          //**************************************
  42          // I2C发送应答信号
  43          // 入口参数: ack(0: ACK; 1: NACK)
  44          //**************************************
  45          void i2c_sendack(bit ack)
  46          {
  47   1          SDA = ack;                  //写应答信号
  48   1          SCL = 1;                    //拉高时钟线
  49   1          Delay5us();                 //延时
  50   1          SCL = 0;                    //拉低时钟线
  51   1          Delay5us();                 //延时
  52   1      }
  53          
  54          //**************************************
C51 COMPILER V9.00   I2C                                                                   07/27/2021 22:36:39 PAGE 2   

  55          //I2C接收应答信号
  56          //**************************************
  57          bit i2c_recvack()
  58          {
  59   1          SCL = 1;                    //拉高时钟线
  60   1          Delay5us();                 //延时
  61   1          CY = SDA;                   //读应答信号
  62   1          SCL = 0;                    //拉低时钟线
  63   1          Delay5us();                 //延时
  64   1          return CY;
  65   1      }
  66          
  67          //**************************************
  68          // 向I2C总线发送一个字节数据
  69          //**************************************
  70          void i2c_send_byte(uchar dat)
  71          {
  72   1          uchar i;
  73   1          for (i=0; i<8; i++)         //8位计数器
  74   1          {
  75   2              dat <<= 1;              //移出数据的最高位
  76   2              SDA = CY;               //送数据口
  77   2              SCL = 1;                //拉高时钟线
  78   2              Delay5us();             //延时
  79   2              SCL = 0;                //拉低时钟线
  80   2              Delay5us();             //延时
  81   2          }
  82   1          i2c_recvack();
  83   1      }
  84          
  85          //**************************************
  86          // 从I2C总线接收一个字节数据
  87          //**************************************
  88          uchar i2c_recvbyte()
  89          {
  90   1          uchar i;
  91   1          uchar dat = 0;
  92   1          SDA = 1;                    // 使能内部上拉，准备读取数据
  93   1          for (i=0; i<8; i++)         // 8位计数器
  94   1          {
  95   2              dat <<= 1;
  96   2              SCL = 1;                // 拉高时钟线
  97   2              Delay5us();             // 延时
  98   2              dat |= SDA;             // 读数据
  99   2              SCL = 0;                // 拉低时钟线
 100   2              Delay5us();             // 延时
 101   2          }
 102   1          return dat;
 103   1      }
 104          
 105          //**************************************
 106          // 向I2C设备写入一个字节数据
 107          //**************************************
 108          void I2C_writedata(uchar slaveaddress, uchar reg_address,uchar reg_data)
 109          {
 110   1          i2c_start();                  // 起始信号
 111   1          i2c_send_byte(slaveaddress);   // 发送设备地址+写信号
 112   1          i2c_send_byte(reg_address);    // 内部寄存器地址
 113   1          i2c_send_byte(reg_data);       // 内部寄存器数据
 114   1          i2c_stop();                   // 发送停止信号
 115   1      }
 116          
C51 COMPILER V9.00   I2C                                                                   07/27/2021 22:36:39 PAGE 3   

 117          //**************************************
 118          // 从I2C设备读取一个字节数据
 119          //**************************************
 120          uchar I2C_readdata(uchar slave_address, uchar reg_address)
 121          {
 122   1              uchar REG_data;
 123   1              
 124   1              i2c_start();                   //ÆðÊ¼ÐÅºÅ
 125   1              i2c_send_byte(slave_address);    //·¢ËÍÉè±¸µØÖ·+Ð´ÐÅºÅ
 126   1              i2c_send_byte(reg_address);     //·¢ËÍ´æ´¢µ¥ÔªµØÖ·£¬´Ó0¿ªÊ¼     
 127   1              i2c_start();                   //ÆðÊ¼ÐÅºÅ
 128   1              i2c_send_byte(slave_address+1);  //·¢ËÍÉè±¸µØÖ·+¶ÁÐÅºÅ
 129   1              REG_data=i2c_recvbyte();       //¶Á³ö¼Ä´æÆ÷Êý¾Ý
 130   1              i2c_sendack(1);                //½ÓÊÕÓ¦´ðÐÅºÅ
 131   1              i2c_stop();                    //Í£Ö¹ÐÅºÅ
 132   1              return REG_data;
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    259    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
