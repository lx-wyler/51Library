C51 COMPILER V9.00   I2C                                                                   08/25/2021 15:03:12 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN i2c.obj
COMPILER INVOKED BY: C:\RJ\Keil_v5\C51\BIN\C51.EXE i2c\i2c.c LARGE OMF2 BROWSE INCDIR(.\uart;.\epaper;.\led;.\other_head
                    -;.\keyboard;.\smg;.\OLED;.\mycommon;.\i2c;.\mpu6050;.\pac;.\eeprom) DEBUG PRINT(.\i2c.lst) OBJECT(i2c.obj)

line level    source

   1          #include "i2c.h"
   2          #include <intrins.h>
   3          #include "PinDefine.h"
   4          #include "mycommon.h"
   5          #include "oled.h"
   6          #include <stdio.h>
   7          
   8          
   9          
  10          //**************************************
  11          //I2C起始信号
  12          //**************************************
  13          void i2c_start()
  14          {
  15   1          SDA = 1;                    //拉高数据线
  16   1          SCL = 1;                    //拉高时钟线
  17   1          Delay5us();                 //延时
  18   1          SDA = 0;                    //产生下降沿
  19   1          Delay5us();                 //延时
  20   1          SCL = 0;                    //拉低时钟线
  21   1      }
  22          
  23          //**************************************
  24          //I2C停止信号
  25          //**************************************
  26          void i2c_stop()
  27          {
  28   1          SDA = 0;                    //拉低数据线
  29   1          SCL = 1;                    //拉高时钟线
  30   1          Delay5us();                 //延时
  31   1          SDA = 1;                    //产生上升沿
  32   1          Delay5us();                 //延时
  33   1      }
  34          
  35          //**************************************
  36          // I2C发送应答信号
  37          // 入口参数: ack(0: ACK; 1: NACK)
  38          //**************************************
  39          void i2c_sendack(bit ack)
  40          {
  41   1          SDA = ack;                  //写应答信号
  42   1          SCL = 1;                    //拉高时钟线
  43   1          Delay5us();                 //延时
  44   1          SCL = 0;                    //拉低时钟线
  45   1          Delay5us();                 //延时
  46   1      }
  47          
  48          //**************************************
  49          //I2C接收应答信号
  50          //**************************************
  51          bit i2c_recvack()
  52          {
  53   1          SCL = 1;                    //拉高时钟线
  54   1          Delay5us();                 //延时
C51 COMPILER V9.00   I2C                                                                   08/25/2021 15:03:12 PAGE 2   

  55   1          CY = SDA;                   //读应答信号
  56   1          SCL = 0;                    //拉低时钟线
  57   1          Delay5us();                 //延时
  58   1          return CY;
  59   1      }
  60          
  61          //**************************************
  62          // 向I2C总线发送一个字节数据
  63          //**************************************
  64          void i2c_send_byte(uchar dat)
  65          {
  66   1          uchar i;
  67   1          for (i=0; i<8; i++)         //8位计数器
  68   1          {
  69   2              dat <<= 1;              //移出数据的最高位
  70   2              SDA = CY;               //送数据口
  71   2              SCL = 1;                //拉高时钟线
  72   2              Delay5us();             //延时
  73   2              SCL = 0;                //拉低时钟线
  74   2              Delay5us();             //延时
  75   2          }
  76   1          i2c_recvack();
  77   1      }
  78          
  79          //**************************************
  80          // 从I2C总线接收一个字节数据
  81          //**************************************
  82          uchar i2c_recvbyte()
  83          {
  84   1          uchar i;
  85   1          uchar dat = 0;
  86   1          SDA = 1;                    // 使能内部上拉，准备读取数据
  87   1          for (i=0; i<8; i++)         // 8位计数器
  88   1          {
  89   2              dat <<= 1;
  90   2              SCL = 1;                // 拉高时钟线
  91   2              Delay5us();             // 延时
  92   2              dat |= SDA;             // 读数据
  93   2              SCL = 0;                // 拉低时钟线
  94   2              Delay5us();             // 延时
  95   2          }
  96   1          return dat;
  97   1      }
  98          
  99          //**************************************
 100          // 向I2C设备写入一个字节数据
 101          //**************************************
 102          void I2C_writedata(uchar slaveaddress, uchar reg_address,uchar reg_data)
 103          {
 104   1          i2c_start();                  // 起始信号
 105   1          i2c_send_byte(slaveaddress);   // 发送设备地址+写信号
 106   1          i2c_send_byte(reg_address);    // 内部寄存器地址
 107   1          i2c_send_byte(reg_data);       // 内部寄存器数据
 108   1          i2c_stop();                   // 发送停止信号
 109   1      }
 110          
 111          //**************************************
 112          // 从I2C设备读取一个字节数据
 113          //**************************************
 114          uchar I2C_readdata(uchar slave_address, uchar reg_address)
 115          {
 116   1              uchar REG_data;
C51 COMPILER V9.00   I2C                                                                   08/25/2021 15:03:12 PAGE 3   

 117   1              
 118   1              i2c_start();                   //ÆðÊ¼ÐÅºÅ
 119   1              i2c_send_byte(slave_address);    //·¢ËÍÉè±¸µØÖ·+Ð´ÐÅºÅ
 120   1              i2c_send_byte(reg_address);     //·¢ËÍ´æ´¢µ¥ÔªµØÖ·£¬´Ó0¿ªÊ¼     
 121   1              i2c_start();                   //ÆðÊ¼ÐÅºÅ
 122   1              i2c_send_byte(slave_address+1);  //·¢ËÍÉè±¸µØÖ·+¶ÁÐÅºÅ
 123   1              REG_data=i2c_recvbyte();       //¶Á³ö¼Ä´æÆ÷Êý¾Ý
 124   1              i2c_sendack(1);                //½ÓÊÕÓ¦´ðÐÅºÅ
 125   1              i2c_stop();                    //Í£Ö¹ÐÅºÅ
 126   1              return REG_data;
 127   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    259    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
