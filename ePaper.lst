C51 COMPILER V9.00   EPAPER                                                                05/11/2021 21:28:56 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE EPAPER
OBJECT MODULE PLACED IN ePaper.obj
COMPILER INVOKED BY: C:\RJ\Keil_v5\C51\BIN\C51.EXE epaper\ePaper.c LARGE OMF2 BROWSE INCDIR(.\uart;.\epaper;.\led;.\othe
                    -r_head;.\keyboard;.\smg;.\OLED;.\mycommon) DEBUG PRINT(.\ePaper.lst) OBJECT(ePaper.obj)

line level    source

   1          #include "PinDefine.h"
   2          #include "ePaper.h"
   3          #include "LED.h"
   4          #include <math.h>
   5          #include "mycommon.h"
   6          #include "commonfront.h"
   7          #include <string.h>
   8          
   9          
  10          
  11          void reset()
  12          {
  13   1              epaperRST=1;
  14   1              delay(150);
  15   1              
  16   1              epaperRST=0;
  17   1              delay(150);
  18   1              
  19   1              epaperRST=1;
  20   1              delay(150);
  21   1      }
  22          
  23          
  24          // 51 sends command to ePaper
  25          void sendCom(unsigned char com){
  26   1              
  27   1              unsigned char i;
  28   1              unsigned char temp;
  29   1              
  30   1              epaperCS=0;  // enable ePaper
  31   1              epaperDC=0;  // send com
  32   1              senddelay();
  33   1              
  34   1              for(i = 0; i<8; ++i){  // first send D7
  35   2                epaperCLK = 0;
  36   2                      senddelay();
  37   2                      
  38   2                      temp=0x80 & com;
  39   2                      if(temp == 0)
  40   2                              epaperDIN=0;
  41   2                      else
  42   2                              epaperDIN=1;
  43   2                      senddelay();
  44   2                      
  45   2                      epaperCLK = 1;
  46   2                      com<<=1;
  47   2                      senddelay();
  48   2              }  // end for
  49   1              
  50   1              epaperCS=1;
  51   1      }
  52          
  53          
  54          // 51 send date to ePaper
C51 COMPILER V9.00   EPAPER                                                                05/11/2021 21:28:56 PAGE 2   

  55          void sendDate(unsigned char date){
  56   1              
  57   1              unsigned char i, temp;
  58   1              
  59   1              epaperCS=0;  // enable ePaper
  60   1              epaperDC=1;  // send date
  61   1              senddelay();
  62   1              
  63   1              for(i = 0; i<8; ++i){  // first send D7
  64   2                epaperCLK = 0;
  65   2                      senddelay();
  66   2                      
  67   2                      temp=0x80 & date;
  68   2                      //epaperDIN = ((read & com) == 1 ? 1: 0);
  69   2                      if(temp == 0)
  70   2                              epaperDIN=0;
  71   2                      else
  72   2                              epaperDIN=1;
  73   2                      senddelay();
  74   2                      
  75   2                      epaperCLK = 1;
  76   2                      date<<=1;
  77   2                      senddelay();
  78   2              }  // end for
  79   1              
  80   1              epaperCS=1;
  81   1      }
  82          
  83          
  84          
  85          // 51 send date to ePaper(use this function when you want to display something)
  86          void sendDate2(unsigned char date){
  87   1              
  88   1              unsigned char i, temp;
  89   1              
  90   1              epaperCS=0;  // enable ePaper
  91   1              epaperDC=1;  // send date
  92   1              senddelay();
  93   1              
  94   1              for(i = 0; i<8; ++i){  // first send D7
  95   2                epaperCLK = 0;
  96   2                      senddelay();
  97   2                      
  98   2                      temp=0x01 & date;
  99   2                      if(temp == 0)
 100   2                              epaperDIN=0;
 101   2                      else
 102   2                              epaperDIN=1;
 103   2                      senddelay();
 104   2                      
 105   2                      epaperCLK = 1;
 106   2                      date>>=1;
 107   2                      senddelay();
 108   2              }  // end for
 109   1              
 110   1              epaperCS=1;
 111   1      }
 112          
 113          
 114          void lcd_chkstatus(){
 115   1        unsigned char busy;
 116   1              //LED0=0;
C51 COMPILER V9.00   EPAPER                                                                05/11/2021 21:28:56 PAGE 3   

 117   1        do
 118   1        {
 119   2          sendCom(0x71);
 120   2                      epaperBUSY=1;
 121   2                      delay(2);
 122   2          busy = epaperBUSY;
 123   2          busy =!(busy & 0x01);
 124   2        }
 125   1        while(busy);   
 126   1              //LED0=1;
 127   1        delay(150);    
 128   1      }
 129          
 130          
 131          // epaper init
 132          void ePaperInit(){
 133   1      //  HRES=0x80;            //128
 134   1      //  VRES_byte1=0x01;        //296
 135   1      //  VRES_byte2=0x28;
 136   1              
 137   1              reset();
 138   1              
 139   1        sendCom(0x06);         //boost soft start
 140   1        sendDate (0x17);   //A
 141   1        sendDate (0x17);   //B
 142   1        sendDate (0x17);   //C       
 143   1              
 144   1        sendCom(0x04);  //Power on
 145   1        lcd_chkstatus();        //waiting for the electronic paper IC to release the idle signal
 146   1              
 147   1        sendCom(0x00);     //panel setting
 148   1        sendDate(0x17);    //LUT from OTP
 149   1        //sendDate(0x0d);    //VCOM to 0V
 150   1              
 151   1        sendCom(0x61);     //resolution setting
 152   1        sendDate (HRES);          
 153   1        sendDate (VRES_byte1);   
 154   1        sendDate (VRES_byte2);
 155   1              
 156   1              sendCom(0X50);     //VCOM AND DATA INTERVAL SETTING      
 157   1        sendDate(0x97);    //WBmode:VBDF 17|D7 VBDW 97 VBDB 57   WBRmode:VBDF F7 VBDW 77 VBDB 37  VBDR B7
 158   1      }
 159          
 160          
 161          void epaperRefresh()
 162          {
 163   1                LED0 = 0;
 164   1                LED1 = 0;
 165   1          sendCom(0x12);     //DISPLAY REFRESH   
 166   1          delay(1);          //!!!The delay here is necessary, 200uS at least!!!     
 167   1          lcd_chkstatus();
 168   1                LED0 = 1;
 169   1                LED1 = 1;
 170   1      } 
 171          
 172          
 173          void epaperSleep()
 174          {
 175   1          sendCom(0X50);  //VCOM AND DATA INTERVAL SETTING  
 176   1          sendDate(0xf7);
 177   1             
 178   1          sendCom(0X02);   //power off
C51 COMPILER V9.00   EPAPER                                                                05/11/2021 21:28:56 PAGE 4   

 179   1          lcd_chkstatus();
 180   1          sendCom(0X07);   //deep sleep
 181   1          sendDate(0xA5);
 182   1      }
 183          
 184          
 185          
 186          void epaperClean()
 187          {
 188   1          unsigned int i;
 189   1              unsigned char temp = 0xFF;
 190   1              
 191   1                
 192   1              LED0=0;
 193   1          sendCom(0x10);        //Transfer old data
 194   1          for(i=0;i<4736;i++){
 195   2            sendDate(temp);
 196   2          }
 197   1              LED0=1;
 198   1              
 199   1              LED1=0;
 200   1          sendCom(0x13);        //Transfer new data    
 201   1          for(i=0;i<4736;i++){
 202   2            sendDate(temp);
 203   2          }
 204   1              LED1=1;
 205   1      }
 206          
 207          
 208          
 209          void epaperDisplayall()
 210          {
 211   1          unsigned int i;
 212   1          sendCom(0x10);        //Transfer old data
 213   1          for(i=0;i<4736;i++)      
 214   1          sendDate(0xff); 
 215   1        
 216   1          sendCom(0x13);        //Transfer new data
 217   1          for(i=0;i<4736;i++)      
 218   1            ;//sendDate(gImage_1[i]);
 219   1      }
 220          
 221          
 222          
 223          //      设置局部显示的起始坐标，每次显示前都先定义一下坐标，设置的时候可以不进入局部模式
 224          //      x是横坐标的起点，y是哪一行。横坐标终点是行尾,n是需要几个位置
 225          //      X_MIN =< x <= X_MAX (比290大的话就无法完整显示一个字符了)
 226          //      Y_MIN =< y <= Y_MAX
 227          unsigned char set_par_pos6_8(unsigned int x, unsigned char y, int n){
 228   1              sendCom(0x90);
 229   1              
 230   1              if(y >= Y_MIN && y <= Y_MAX){
 231   2                      sendDate(y << 3);
 232   2                      sendDate(y << 3);
 233   2              }
 234   1              else
 235   1                      return 0;
 236   1              
 237   1              if(x >= X_MIN && x + (6 * (n - 1)) <= X_MAX){
 238   2                      sendDate((unsigned char)(x >> 8) & 0x01);
 239   2                      sendDate((unsigned char)(x & 0x00ff));
 240   2                      sendDate((unsigned char)(( x + (6 * n - 1 ) >> 8) & 0x01));
C51 COMPILER V9.00   EPAPER                                                                05/11/2021 21:28:56 PAGE 5   

 241   2                      sendDate((unsigned char)(( x + (6 * n - 1 )) & 0x00ff));
 242   2              }
 243   1              else
 244   1                      return 0;
 245   1              // 上面这6句为什么这么写，看相应寄存器的说明，数据格式就是这样 
 246   1              
 247   1              sendDate(0x01);
 248   1              delay(1);
 249   1              
 250   1              return 1;
 251   1      }
 252          
 253          
 254          
 255          // 显示一个字符
 256          bit Displaychar6_8(const unsigned int x, const unsigned char y, const unsigned char ch){
 257   1              int i;
 258   1              
 259   1              sendCom(0x91);  // 进入局部模式
 260   1              
 261   1              if(!set_par_pos6_8(x, y, 1))
 262   1                      return 0;
 263   1              
 264   1              sendCom(0x13);        //Transfer new data
 265   1              for(i = 0; i < 6; i++)
 266   1                      sendDate2(~F6x8[ch - 32][i]);  // 这里注意使用sendDate2
 267   1              epaperRefresh();
 268   1      
 269   1              sendCom(0x92);          //////
 270   1              return 1;
 271   1      }
 272          
 273          
 274          
 275          // 显示数字（小数，整数都行，小数固定显示2位小数）
 276          // 在指定位置输出数字，数字长度不可超过最右端
 277          // x: 0-要显示的开始
 278          // y: 0-15
 279          // num: 要显示的数字
 280          // 数字太大的话，末位会有误差 
 281          bit Displaynum6_8(const unsigned int x, const unsigned char y, double num){
 282   1              unsigned char N = 0;  // 记录num的位数，== 0时表示是 num == 0
 283   1              double dtemp = num;  // num备份
 284   1              long itemp = myabs(num);  // num备份
 285   1              unsigned char ctemp;  // 待显示num的某一位
 286   1              int i, j;  // 循环计数用
 287   1              bit negativeflag = 0;
 288   1      
 289   1              // ---判断是否是负数---
 290   1              if(num < 0)
 291   1                      negativeflag = 1;
 292   1              
 293   1              // ---获得num的位数或者小数整数的位数---
 294   1              if( num == 0 )
 295   1                      N = 0;
 296   1              else{
 297   2                      while(itemp != 0){
 298   3                              itemp /= 10;
 299   3                              N++;
 300   3                      }
 301   2                      if(!negativeflag)
 302   2                              N--;
C51 COMPILER V9.00   EPAPER                                                                05/11/2021 21:28:56 PAGE 6   

 303   2              }
 304   1              
 305   1              // 判断剩余的位置能否够用，够用的话顺便设定局部区域
 306   1              if(isDecimal(num)){
 307   2                      // 是小数
 308   2                      if(x > (X_MAX - 6 * (N + 1 + 3) + 1))
 309   2                              // 位置不够
 310   2                              return 0;
 311   2                      if(!set_par_pos6_8(x, y, N + 1 + 3))
 312   2                              return 0;
 313   2              }
 314   1              else{
 315   2                      // 整数
 316   2                      if(x > (X_MAX - 6 * (N + 1) + 1))
 317   2                              // 位置不够
 318   2                              return 0;
 319   2                      if(!set_par_pos6_8(x, y, N + 1))
 320   2                              return 0;
 321   2              }
 322   1              
 323   1              // ---逐个显示每一位---
 324   1              itemp = myabs(num);
 325   1              
 326   1              sendCom(0x91);  // 进入局部模式
 327   1              
 328   1              sendCom(0x13);        //Transfer new data
 329   1              
 330   1              if(negativeflag){
 331   2                      // 负数的话先显示一个负号
 332   2                      for(j = 0; j < 6; j++)
 333   2                              sendDate2(~F6x8['-' - 32][j]);  // 这里注意使用sendDate2
 334   2                      N--;
 335   2              }
 336   1              
 337   1              for(i = (int)N; i >= 0; i--){
 338   2                      ctemp = (unsigned char)((long)(itemp / mypow(10, i)) % 10 + 48);
 339   2                      for(j = 0; j < 6; j++)
 340   2                              sendDate2(~F6x8[ctemp - 32][j]);  // 这里注意使用sendDate2
 341   2              }
 342   1              
 343   1                      // 小数的话需要显示后3位小数
 344   1              if(isDecimal(num)){
 345   2                      dtemp = myabs(num);
 346   2                      for(j = 0; j < 6; j++)
 347   2                              sendDate2(~F6x8['.' - 32][j]);  // 这里注意使用sendDate2
 348   2                      for(i = 0; i < 2; i++){
 349   3                              ctemp = (long)(dtemp* mypow(10, i + 1))%10 + 48;
 350   3                              for(j = 0; j < 6; j++)
 351   3                                      sendDate2(~F6x8[ctemp - 32][j]);  // 这里注意使用sendDate2
 352   3                      }
 353   2              }
 354   1              
 355   1              
 356   1              epaperRefresh();
 357   1              sendCom(0x92);  // 退出局部模式
 358   1              
 359   1              return 1;
 360   1      }
 361          
 362          
 363          // 显示字符串
 364          // 位置规定同数字，也可以看相应的set_par_pos6_8()；
C51 COMPILER V9.00   EPAPER                                                                05/11/2021 21:28:56 PAGE 7   

 365          void Displaystr6_8(const unsigned int x, const unsigned char y,unsigned char *ch){
 366   1              unsigned char c = 0, i = 0, j = 0;
 367   1      }
*** WARNING C280 IN LINE 365 OF EPAPER\EPAPER.C: 'x': unreferenced local variable
*** WARNING C280 IN LINE 365 OF EPAPER\EPAPER.C: 'y': unreferenced local variable
*** WARNING C280 IN LINE 365 OF EPAPER\EPAPER.C: 'ch': unreferenced local variable
 368          
 369          
 370          
 371          
 372          
 373          
 374          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1782    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      52
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
