C51 COMPILER V9.00   MYCOMMON                                                              07/27/2021 20:48:46 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MYCOMMON
OBJECT MODULE PLACED IN mycommon.obj
COMPILER INVOKED BY: C:\RJ\Keil_v5\C51\BIN\C51.EXE mycommon\mycommon.c LARGE OMF2 BROWSE INCDIR(.\uart;.\epaper;.\led;.\
                    -other_head;.\keyboard;.\smg;.\OLED;.\mycommon;.\i2c;.\mpu6050;.\pac) DEBUG PRINT(.\mycommon.lst) OBJECT(mycommon.obj)

line level    source

   1          #include <intrins.h>
   2          #include "mycommon.h"
   3          
   4          void senddelay(){
   5   1              unsigned char i=1;
   6   1              while(i--)
   7   1                      _nop_();
   8   1      }
   9          
  10          void delay(unsigned int n){
  11   1        int i;
  12   1              
  13   1              for(;n>0;--n){
  14   2                i=1000;
  15   2                      for(;i>0;--i);
  16   2              }
  17   1      }
  18          
  19          //**************************************
  20          //延时5微秒(STC90C52RC@12M)
  21          //不同的工作环境,需要调整此函数
  22          //当改用1T的MCU时,请调整此延时函数
  23          //**************************************
  24          void Delay5us()
  25          {
  26   1              _nop_();_nop_();_nop_();_nop_();
  27   1              _nop_();_nop_();_nop_();_nop_();
  28   1              _nop_();_nop_();_nop_();_nop_();
  29   1              _nop_();_nop_();_nop_();_nop_();
  30   1              _nop_();_nop_();_nop_();_nop_();
  31   1              _nop_();_nop_();_nop_();_nop_();
  32   1      }
  33          
  34          
  35          
  36          // 我的取绝对值函数
  37          double myabs(double x){
  38   1              if(x < 0)
  39   1                      return -x;
  40   1              else
  41   1                      return x;
  42   1      }
  43          
  44          
  45          
  46          // 判断一个数是不是小数
  47          bit isDecimal(double x){
  48   1              x = myabs(x);
  49   1              
  50   1              if( x - (long)x > 0)
  51   1                      return 1;
  52   1              else
  53   1                      return 0;
  54   1      }
C51 COMPILER V9.00   MYCOMMON                                                              07/27/2021 20:48:46 PAGE 2   

  55          
  56          
  57          
  58          // 整数专用次方
  59          long mypow(long x, int n){
  60   1              int i;
  61   1              long temp = 1;
  62   1              
  63   1              if(n == 0)
  64   1                      return 1;
  65   1              
  66   1              for( i = n; i > 0; i--)
  67   1                      temp *= x;
  68   1              return temp;
  69   1      }
  70          
  71          const unsigned char code F6x8[][6] =
  72          {
  73              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
  74              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
  75              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
  76              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
  77              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $               0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12
  78              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
  79              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
  80              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
  81              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
  82              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
  83              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
  84              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
  85              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
  86              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
  87              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
  88              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
  89              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
  90              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
  91              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
  92              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
  93              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
  94              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
  95              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
  96              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
  97              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
  98              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
  99              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
 100              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
 101              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
 102              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
 103              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
 104              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
 105              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @                  0x00, 0x32, 0x49, 0x59, 0x51, 0x3E
 106              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
 107              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
 108              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
 109              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
 110              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
 111              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
 112              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
 113              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
 114              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
 115              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
 116              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
C51 COMPILER V9.00   MYCOMMON                                                              07/27/2021 20:48:46 PAGE 3   

 117              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
 118              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
 119              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
 120              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
 121              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
 122              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
 123              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
 124              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
 125              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
 126              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
 127              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
 128              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
 129              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
 130              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
 131              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
 132              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
 133              { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
 134              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
 135              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
 136              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
 137              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
 138              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
 139              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
 140              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
 141              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
 142              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
 143              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
 144              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
 145              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
 146              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
 147              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
 148              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
 149              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
 150              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
 151              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
 152              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
 153              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
 154              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
 155              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
 156              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
 157              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
 158              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
 159              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
 160              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
 161              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
 162              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
 163              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
 164                  { 0x00, 0x00, 0x18, 0x7e, 0x81, 0x00 },   // {
 165                  { 0x00, 0x81, 0x7e, 0x18, 0x00, 0x00 },   // }
 166                  { 0x00, 0x00, 0xff, 0xff, 0x00, 0x00 },   // |
 167              { 0x08, 0x10, 0x08, 0x04, 0x08, 0x10 }    // ~
 168          };


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    338    ----
   CONSTANT SIZE    =    570    ----
   XDATA SIZE       =   ----      20
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.00   MYCOMMON                                                              07/27/2021 20:48:46 PAGE 4   

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
